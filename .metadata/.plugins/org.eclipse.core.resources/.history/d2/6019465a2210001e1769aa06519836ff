package com.training.ue;

import java.util.Random;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import com.yantra.yfs.japi.YFSEnvironment;
import com.yantra.yfs.japi.YFSUserExitException;
import com.yantra.yfs.japi.ue.YFSBeforeCreateOrderUE;

public class BeforeCreateOrderUE implements YFSBeforeCreateOrderUE {

	@Override
	public String beforeCreateOrder(YFSEnvironment arg0, String arg1) throws YFSUserExitException {
		return null;
	}
	@Override
	public Document beforeCreateOrder(YFSEnvironment env, Document inputDoc) throws YFSUserExitException {
		NodeList orderLine = inputDoc.getElementsByTagName("OrderLine");
		
        for(int i=0;i<orderLine.getLength();i++) {
        	Element eleOrderLine = (Element) inputDoc.getElementsByTagName("OrderLine").item(i);
            Element eleItem = (Element) eleOrderLine.getElementsByTagName("Item").item(i);
            String itemid = eleItem.getAttribute("ItemID");
            
            if (itemid.isEmpty()) {
                throw new YFSUserExitException("ItemID is empty");
            }
            
            Element extn = inputDoc.createElement("Extn");
            extn.setAttribute("SubItemId", "V-"+itemid);
            eleOrderLine.appendChild(extn);
            
        }
        

        Element rootElement = inputDoc.getDocumentElement();

  
        Random random = new Random();
        String randomNum = ""+random.nextInt(10000);
        
        Element extn = inputDoc.createElement("Extn");
        extn.setAttribute("CustomerNo",randomNum);
        rootElement.appendChild(extn);
        return inputDoc;
	}

}
