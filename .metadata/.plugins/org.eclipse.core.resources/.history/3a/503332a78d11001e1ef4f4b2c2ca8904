package com.trainings.api;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import org.w3c.dom.Document;

import com.yantra.interop.japi.YIFApi;
import com.yantra.interop.japi.YIFCustomApi;
import com.yantra.yfc.util.YFCCommon;
import com.yantra.yfs.japi.YFSConnectionHolder;
import com.yantra.yfs.japi.YFSEnvironment;

public class ResolveACRemorseHold implements YIFCustomApi {

	@Override
	public void setProperties(Properties arg0) throws Exception {
	}
	
	protected static YIFApi api = null;

	public List<Document> getJobs(YFSEnvironment env, Document inDoc, Document lastMessageCreated) throws Exception {

		List<Document> listDocuments = new ArrayList<Document>();

		String sql = "select order_header_key from yfs_order_hold_type where status='1100' and hold_type='AC_REMORSE_HOLD'";

		ResultSet rsRecords = fetchRecords(env, sql);

		if (!YFCCommon.isVoid(rsRecords)) {

			while (rsRecords.next()) {

				String strOHKey = rsRecords.getString(1).trim();

				Document inDocToExecuteJob = CreateDocument(strOHKey);

				listDocuments.add(inDocToExecuteJob);

			}

		}

		return listDocuments;

	}
	
	private ResultSet fetchRecords(YFSEnvironment env, String strSqlQuery) throws Exception {

		ResultSet resultSet = null;

		Statement statement = null;

		Connection connection = null;

		YFSConnectionHolder context = (YFSConnectionHolder) env;

		connection = context.getDBConnection();

		statement = connection.createStatement();

		// statement.setMaxRows(iNumOfRecordsToBuffer);

		resultSet = statement.executeQuery(strSqlQuery);

		return resultSet;

	}

}
