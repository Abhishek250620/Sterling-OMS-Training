package com.trainings.api;

import java.util.Properties;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import com.sterlingcommerce.baseutil.SCXmlUtil;
import com.yantra.interop.japi.YIFApi;
import com.yantra.interop.japi.YIFClientFactory;
import com.yantra.interop.japi.YIFCustomApi;
import com.yantra.yfc.log.YFCLogCategory;
import com.yantra.yfs.japi.YFSEnvironment;

public class AddValueToOrderHeaderAPI implements YIFCustomApi{


	Properties mProperties = new Properties();

	/**
	 * Logger instance
	 */
	private static YFCLogCategory mLogger = YFCLogCategory.instance(AddValueToOrderHeaderAPI.class);


	/**
	 * boolean to check whether debug is enabled
	 */
	private static boolean mIsDebugEnabled;

	@Override
	public void setProperties(Properties properties) throws Exception {
		if (properties != null) {
			this.mProperties = properties;
		}
	}
	
	public static Document changeOrderHeader(YFSEnvironment env,Document inDoc) throws Exception {
		Document outDoc = invokeAPI(env,"changeOrder",null,generateOutputDocument(inDoc, env));
		return outDoc;
	}

	public static Document invokeAPI(YFSEnvironment env,String apiName, String templateName, Document inDoc)
			throws Exception {
		YIFApi api = YIFClientFactory.getInstance().getApi();
		if (templateName != null)
			env.setApiTemplate(apiName, templateName);
		Document outDoc = api.invoke(env, apiName, inDoc);
		env.clearApiTemplate(apiName);
		return outDoc;
	}

	public static Document generateOutputDocument(Document inputDocument, YFSEnvironment env) throws Exception {

		Document outputXmlDoc = null;

		Element rootElement = inputDocument.getDocumentElement();

		String itemID = getItemId(env, inputDocument);
		System.out.println(itemID);

		Element outputRootElement = outputXmlDoc.createElement("Order");
		outputRootElement.setAttribute("Action", "MODIFY");
		outputRootElement.setAttribute("DocumentType", rootElement.getAttribute("DocumentType"));
		outputRootElement.setAttribute("EnterpriseCode", rootElement.getAttribute("EnterpriseCode"));
		outputRootElement.setAttribute("OrderNo", rootElement.getAttribute("OrderNo"));
		outputXmlDoc.appendChild(outputRootElement);

		Element extnElement = outputXmlDoc.createElement("Extn");
		extnElement.setAttribute("SubItemId", "V-"+itemID);
		extnElement.setAttribute("CustomerNo", String.valueOf(System.currentTimeMillis()));
		outputRootElement.appendChild(extnElement);
		
		System.out.println("Output of Execute Job:" + SCXmlUtil.getString(outputXmlDoc));

		return outputXmlDoc;
	}

	public static String getItemId(YFSEnvironment env, Document inDoc)throws Exception{

		Document doc = invokeAPI(env, "getOrderDetails", null, inDoc);
		NodeList itemNodes = doc.getElementsByTagName("Item");

		Element itemElement = (Element) itemNodes.item(0);
		String	itemID = itemElement.getAttribute("ItemID");
		return itemID;
	}

}
